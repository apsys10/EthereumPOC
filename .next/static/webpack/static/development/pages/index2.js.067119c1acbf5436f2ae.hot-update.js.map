{"version":3,"file":"static/webpack/static\\development\\pages\\index2.js.067119c1acbf5436f2ae.hot-update.js","sources":["webpack:///./pages/index2.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport factory from '../factory';\r\nimport { Card, Button, Form, Label, Input, Dropdown , Message} from 'semantic-ui-react';\r\nimport Layout from '../components/Layout';\r\nimport { Link, Router } from '../routes';\r\nimport web3 from '../web3';\r\nimport Campaign from '../campaign';\r\nimport Info from '../components/Grid';\r\nimport Wrap from '../components/Wrap';\r\nimport Modal from '../components/Modal2';\r\nimport PaypalButton from '../components/PaypalButton';\r\nimport axios from 'axios';\r\nimport Notify from '../components/Message2';\r\n\r\nconst CLIENT = {\r\n  sandbox: 'ASRY3giNhA74PLE3xxA63YvrTe4o8nqBqYxmihjC1dyKgovBtT0yUIQPdeTJSKMkhNBhzVSQUcqcVCe0', \r\n  production: 'Aa5WfEUtZWM9Go_gSx71WB6UncUGmF2PTZbZwigE2Z_RQECPNA1MzqiCCgIGDmv4wNHJCCN5ABrBRqIh',\r\n};\r\n\r\nconst ENV = process.env.NODE_ENV === 'production'\r\n  ? 'production'\r\n  : 'sandbox';\r\n\r\n\r\n\r\nclass CampaignIndex extends Component {\r\nstate = {\r\n  isOpen: false,\r\n  donation: '',\r\n  error: '',\r\n  visible: false,\r\n  payment: {}\r\n  \r\n}\r\n\r\ntoggle = () =>\r\n{ console.log(\"in callback\")\r\nthis.setState(prevState => ({\r\n  isOpen: !prevState.isOpen\r\n}));\r\n}\r\nhandleDismiss = () => {\r\n  this.setState({ visible: false })\r\n }\r\n\r\n\r\n\r\n\r\n  static async getInitialProps(props) {\r\n    try {\r\n      const campaigns = await factory.methods.getDeployedCampaigns().call();\r\n      const accountInfo = props.query;\r\n      const accounts = await web3.eth.getAccounts();\r\n      \r\n      const summaries = await campaigns.map(async (address, index)=>\r\n      {\r\n        let campaign = await Campaign(address);\r\n        \r\n        let summary =  await campaign.methods.getSummary().call();\r\n        return summary\r\n      })\r\n\r\n   \r\n    return { campaigns, accountInfo, accounts , summaries};\r\n  }\r\n\r\n  catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  \r\n  componentWillReceiveProps = (props) =>\r\n  {\r\nconsole.log(\"in component will recieve props\");\r\nconsole.log(props)\r\n  }\r\n\r\n  \r\n  renderInfo = () => {\r\n    let latest = this.props.campaigns.length;\r\n    \r\n   \r\n    \r\n  \r\n\r\n\r\n    const items = this.props.campaigns.map((address, index) => {\r\n      const onSuccess = async (payment) =>\r\n      {   \r\n        let campaign = await Campaign(address);\r\n        let summary = await campaign.methods.getSummary().call();\r\n        \r\n        payment.CampignName = summary[6];\r\n        payment.amount = this.state.donation;\r\n        payment.payerName = localStorage.getItem('currentUser');\r\n        console.log('Successful payment!', payment);\r\n        \r\n        axios.post('https://donations-ffcdf.firebaseio.com/donations.json' , payment).then((res) =>\r\n        {\r\n          console.log(res);\r\n        }).catch( err =>\r\n          {\r\n            console.log(err);\r\n          })\r\n          this.setState({visible: true });\r\n          this.setState({payment: payment});\r\n          window.scrollTo(0, 0);\r\n      }\r\n      \r\n  \r\n    const onError = (error) =>\r\n    {\r\n      console.log('Erroneous payment OR failed to load script!', error);\r\n      this.setState({visible: true });\r\n      this.setState({error: \"\" });\r\n      window.scrollTo(0, 0);\r\n    }\r\n      \r\n  \r\n    const onCancel = (data) =>\r\n    {\r\n      console.log('Cancelled payment!', data);\r\n      this.setState({visible: true });\r\n      window.scrollTo(0, 0);\r\n  \r\n    }\r\n\r\n      return {\r\n        header: \" Campaign:   #\" + (index +1),\r\n        color: (index + 1 == latest) ? \"green\" : \"null\",\r\n        description: (\r\n          <Wrap>\r\n            <br />\r\n          <Info address= {address} accountInfo = {this.props.accountInfo.accountInfo}/>\r\n          <div>\r\n            <br />\r\n        <Link route={`/campaigns/${this.props.accountInfo.accountInfo}/${address}`}>\r\n            <a style={{fontSize: \"20px\" , padding: \"5px\"}}> view details </a>\r\n          </Link>\r\n          </div>\r\n          <br />\r\n          <div style ={{marginTop: \"20px\"}}>\r\n          <Modal address = {address} accountInfo ={this.props.accountInfo.accountInfo} callback= {this.toggle} /> \r\n          <div style = {{float: 'right' , padding : '5px'}}>\r\n          <p style = {{color: 'black', fontSize: '20px' , fontFamily: 'Ariel'}}>Donate in USD</p>\r\n        <Input icon = 'dollar sign' size = 'mini' value = {this.state.donation} onChange = {event => this.setState ({donation : event.target.value})}>\r\n     </Input>\r\n     <div style = {{float: 'right' , padding: '5px' , marginRight: '400px' }}>\r\n          <PaypalButton\r\n        \r\n        client={CLIENT}\r\n        env={ENV}\r\n        commit={true}\r\n        currency={'USD'}\r\n        total={this.state.donation}\r\n        onSuccess={onSuccess}\r\n        onError={onError}\r\n        onCancel={onCancel}\r\n      />\r\n      </div>\r\n      </div>\r\n          </div>\r\n         \r\n   \r\n          </Wrap>\r\n        ),\r\n        fluid: true,\r\n      };\r\n    }).reverse();\r\n\r\n\r\n\r\n    return <Card.Group items={items} style={{marginLeft: '80px' ,marginRight: '80px'}}  />\r\n  }\r\n\r\n\r\n  render() {\r\n    \r\n\r\n\r\n    return (\r\n      <Layout>\r\n        <Notify visible= {this.state.visible} handle = {this.handleDismiss} address = {this.state.payment.CampignName} data = {this.state.payment} />\r\n        <div style={{ color: 'red' }}>\r\n          <h3 style={{ padding: '10px', color: 'black' }}>Open Campaigns</h3>\r\n          {this.renderInfo()}\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CampaignIndex;\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AAKA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AA2BA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAsBA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAkBA;AAvCA;AAyCA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAEA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;AA7IA;;;;;;;;AAEA;AACA;;AADA;AACA;;AACA;AACA;;AADA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAIA;AAJA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAGA;AACA;;;;;;;;;;;;;;;;;;AA3CA;AACA;AAsKA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}