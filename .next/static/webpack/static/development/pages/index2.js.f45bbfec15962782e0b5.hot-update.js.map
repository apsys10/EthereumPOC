{"version":3,"file":"static/webpack/static\\development\\pages\\index2.js.f45bbfec15962782e0b5.hot-update.js","sources":["webpack:///./components/Grid.js"],"sourcesContent":["import React , {Component} from 'react';\r\nimport {Container , Grid , Card , Button , Input , Message} from 'semantic-ui-react';\r\n\r\nimport Wrap from './Wrap';\r\nimport Campaign from '../campaign';\r\nimport userData from '../pages/json_demo.json';\r\nimport contributeForm from './contributeForm';\r\nimport Modal from './Modal2';\r\nimport PaypalButton from './PaypalButton';\r\nimport Notify from '../components/Message2';\r\nimport web3 from '../web3';\r\n\r\nimport axios from 'axios';\r\n\r\nconst CLIENT = {\r\n  sandbox: 'ASRY3giNhA74PLE3xxA63YvrTe4o8nqBqYxmihjC1dyKgovBtT0yUIQPdeTJSKMkhNBhzVSQUcqcVCe0', \r\n  production: 'Aa5WfEUtZWM9Go_gSx71WB6UncUGmF2PTZbZwigE2Z_RQECPNA1MzqiCCgIGDmv4wNHJCCN5ABrBRqIh',\r\n};\r\n\r\nconst ENV = process.env.NODE_ENV === 'production'\r\n  ? 'production'\r\n  : 'sandbox';\r\n\r\nclass Info extends Component {\r\n\r\n\r\nstate = {\r\n  summary: {},\r\n  donation: 0,\r\n  error: '',\r\n  visible: false,\r\n  payment: {},\r\n  touched: false,\r\n  currentRate: 0,\r\n  campaign: {}\r\n}\r\ncomponentDidMount = async () =>\r\n{\r\n  const campaign =  Campaign (this.props.address);\r\n  this.setState({campaign: campaign})\r\n  console.log(campaign)\r\n   const summary =  await campaign.methods.getSummary ().call ();\r\n   this.setState({summary: summary});\r\n   axios.get('https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=BTC,USD,EUR').then((res) =>\r\n          {\r\n            console.log(res.data.USD);\r\n            this.setState({currentRate: res.data.USD});\r\n          }).catch( err =>\r\n            {\r\n              console.log(err);\r\n            })\r\n\r\n}\r\nhandleDismiss = () => {\r\n  this.setState({ visible: false })\r\n }\r\n \r\n\r\n \r\n  render()\r\n  { let message;\r\n    const minimumContribution = this.state.summary[0];\r\n    const min = minimumContribution/1000000000000000000;\r\n    if(this.state.donation < this.state.currentRate && this.state.touched)\r\n    {\r\n      message = <p style ={{color: 'red'}}>You won't be an approver if you pay less than minimum contribution. Currently {min*this.state.currentRate}</p>\r\n      console.log(typeof min)\r\n    }\r\n    else\r\n    {\r\n      message= null;\r\n    }\r\n\r\n  console.log(\"donating now\", this.state.donation)\r\n  \r\n    const onSuccess = async (payment) =>\r\n      {   \r\n       \r\n        \r\n        \r\n        payment.CampignName = this.state.summary[6];\r\n        payment.amount = this.state.donation;\r\n        payment.payerName = localStorage.getItem('currentUser');\r\n        console.log('Successful payment!', payment);\r\n        \r\n        axios.post('https://donations-ffcdf.firebaseio.com/donations.json' , payment).then((res) =>\r\n        {\r\n          console.log(res);\r\n        }).catch( err =>\r\n          {\r\n            console.log(err);\r\n          });\r\n          \r\n          this.setState({visible: true });\r\n          this.setState({payment: payment});\r\n          const donate = payment.amount/this.state.currentRate;\r\n          await this.state.campaign.methods\r\n        .contribute ()\r\n        .send ({\r\n          from: this.props.accountInfo,\r\n          value: donate * 1000000000000000000,\r\n          gas: 3000000,\r\n        });\r\n          window.location.reload();\r\n        \r\n      }\r\n      \r\n  \r\n    const onError = (error) =>\r\n    {\r\n      console.log('Erroneous payment OR failed to load script!', error);\r\n      this.setState({visible: true });\r\n      this.setState({error: \"Erroneous payment!\" });\r\n      \r\n    }\r\n      \r\n  \r\n    const onCancel = (data) =>\r\n    {\r\n      console.log('Cancelled payment!', data);\r\n      this.setState({visible: true });\r\n      \r\n  \r\n    }\r\n    \r\n    \r\n    \r\n    const manager = this.state.summary[4];\r\n   \r\n    const balance = this.state.summary[1];\r\n    const beneficiary = this.state.summary[5];\r\n    const name = this.state.summary[6];\r\n    const description = this.state.summary[7];\r\n    const goal = this.state.summary[8];\r\n    let managerName = '' ;\r\n    let beneficiaryName = '';\r\n    for(let i in userData){\r\n        if(userData[i].address == manager){\r\n          managerName = userData[i].name;\r\n              break;\r\n        }\r\n    }\r\n    console.log(\"name of manager = \"+ managerName+\" for address = \"+manager);\r\n\r\n\r\n    for(let i in userData){\r\n      if(userData[i].address == beneficiary){\r\n            beneficiaryName = userData[i].name;\r\n            break;\r\n      }\r\n    }\r\n    console.log(this.state.summary);\r\n    console.log(this.props.accountInfo);\r\n    const bal = balance/1000000000000000000;\r\n\r\n   \r\n     \r\n  \r\n\r\n    const items = [\r\n  \r\n  {\r\n    \r\n      header: <h3 style ={{color: 'black'}}>Campaign name</h3>,\r\n       meta : <h3 style ={{color: 'black'}}>{name}</h3>,\r\n      description: \"Title\"\r\n\r\n      \r\n      \r\n    },\r\n    {\r\n      header: <h3 style ={{color: 'black'}}>Description</h3>,\r\n      meta: <h3 style ={{color: 'black'}}>{description}</h3>\r\n      \r\n      \r\n    },\r\n    {\r\n      meta:<h3 style ={{color: 'black'}}>{min}</h3>, //minimumContribution,\r\n        header:  <h3 style ={{color: 'black'}}>Minimum Contribution in ether</h3>,\r\n      description: \"Contribute atleast this much ether to beacome an approver\"\r\n    },\r\n\r\n    {\r\n     //header: ,\r\n     header: <h3 style ={{color: 'black'}}>Balance</h3>,\r\n     //header: web3.utils.fromWei(bal , 'ether' )+ 'wei',\r\n      meta: <h3 style ={{color: 'black'}}>{bal + ' ether'}</h3>\r\n      \r\n    },\r\n    {\r\n      header: <h3 style ={{color: 'black'}}>Owner</h3>,\r\n      meta: <h3 style ={{color: 'black'}}>{beneficiaryName}</h3>,\r\n      description: \"Owner of this campaign\"\r\n      \r\n    },\r\n    {\r\n      header: <h3 style ={{color: 'black'}}>Goal Amount</h3>,\r\n      meta: <h3 style ={{color: 'black'}}>{goal}</h3>,\r\n      description: \"Goal set for this Campaign\",\r\n    \r\n    }\r\n  ];\r\n      \r\n      return <Wrap>\r\n         <div style={{marginBottom: '20px'}}><Notify visible= {this.state.visible} handle = {this.handleDismiss} address = {this.state.payment.CampignName} data = {this.state.payment} error = {this.state.error} />\r\n         </div>\r\n         <Card.Group items={items} />\r\n         <div style = {{float: 'right' , padding : '5px' , marginRight : \"400px\"}}>\r\n          <p style = {{color: 'black', fontSize: '20px' , fontFamily: 'Ariel'}}>Donate in $</p>\r\n        \r\n     \r\n         <div style= {{marginBottom: '5px'}}>\r\n      <Input icon = 'dollar sign' error={this.state.donation < this.state.currentRate && this.state.touched} size = 'mini' value = {this.state.donation} onChange = {event => { this.setState ({donation : event.target.value})\r\n      this.setState({touched: true})\r\n        }}>\r\n   </Input>\r\n   {message}\r\n   </div>\r\n\r\n        <PaypalButton\r\n       id = \"pay\"\r\n      client={CLIENT}\r\n      env={ENV}\r\n      commit={true}\r\n      currency={'USD'}\r\n      total={this.state.donation}\r\n      onSuccess={onSuccess}\r\n      onError={onError}\r\n      onCancel={onCancel}\r\n    />\r\n    \r\n    \r\n    </div>\r\n         \r\n         </Wrap>\r\n  }\r\n}\r\n  export default Info;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AAGA;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;;;;;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAJA;AAAA;AACA;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAIA;AAAA;AACA;AADA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AApBA;AAAA;AAwBA;AACA;AACA;AAHA;AACA;AAxBA;AA4BA;AACA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAggBA;;;;AApNA;AACA;AAqNA;;;;A","sourceRoot":""}