{"version":3,"file":"static/webpack/static\\development\\pages\\onlyCreate.js.d41fd348a5562f5301c1.hot-update.js","sources":["webpack:///./pages/onlyCreate.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport factory from '../factory';\r\nimport {Card, Button} from 'semantic-ui-react';\r\nimport Layout from '../components/Layout';\r\nimport {Link, Router} from '../routes';\r\nimport web3 from '../web3';\r\nimport Info from '../components/Grid2';\r\nimport Wrap from '../components/Wrap';\r\nimport userData from './json_demo.json';\r\nimport Campaign from '../campaign';\r\nimport Notify from '../components/Message';\r\nimport axios from 'axios';\r\n\r\n\r\nclass OnlyCreate extends Component {\r\n// state = {\r\n//   campaigns: [],\r\n//   accountInfo: {},\r\n//   accounts: []\r\n// }\r\nstate ={\r\n  rerender: false,\r\n  visible: false\r\n}\r\n   static async getInitialProps (props){\r\n     try {\r\n          const campaigns = await factory.methods.getDeployedCampaigns ().call ();\r\n          const accountInfo = props.query;\r\n          const accounts = await web3.eth.getAccounts();\r\n          //console.log(accounts[0]);\r\n        \r\n          return {campaigns, accountInfo , accounts};\r\n     } catch (error) {\r\n          console.log(error)\r\n     }  \r\n    \r\n  }\r\n  //test fetch\r\n  // componentDidMount = () =>\r\n  // {\r\n  // axios.get(\"https://donations-ffcdf.firebaseio.com/donations.json\").then((res) =>\r\n  // {\r\n  //  console.log(\"response data\",res.data);\r\n  //   const fetched = [];\r\n  //  for( let key in res.data) \r\n  //  {\r\n  //    fetched.push({...res.data[key]}\r\n  //   )\r\n  //  }\r\n  //  console.log(\"fetched data\", fetched);\r\n  //  let arr = [];\r\n  // for(let key in fetched)\r\n  // { if(fetched[key].CampignName == \"Paypal\")\r\n  // {\r\n  //   console.log(fetched[key])\r\n  // }\r\n    \r\n  // }\r\n\r\n  // }\r\n  // )\r\n  // }\r\n//   arr = fetched.map((v,i) =>\r\n//   {\r\n//     if(v.CampaignName == \"Paypal\")\r\n//     {\r\n//       return v;\r\n//     }\r\n  //})\r\n//  console.log(arr);\r\n\r\n\r\n  //}\r\n\r\nRemove = async (address,index) =>\r\n{\r\n  console.log(index);\r\n  try {\r\n\r\nlet campaign = await Campaign(address);\r\nlet summary = await campaign.methods.getSummary ().call ();\r\nlet faddr = \"0xb4049d6b71612E866187AD1D465651A52B3B7D7F\"\r\nawait campaign.methods.destruct(faddr,summary[5],index).send({from: this.props.accountInfo.accountInfo, gas: 4000000 }).then(res =>\r\n  {\r\n    console.log(res);\r\n    this.setState({visible: true })\r\n    Router.pushRoute(`/id/${this.props.accountInfo.accountInfo}`);\r\n  \r\n    // this.setState(prevState => ({\r\n    //   rerender: !prevState.rerender\r\n    // }));\r\n    // console.log(this.state.rerender);\r\n  }).catch(err =>\r\n    {\r\n      console.log(err)\r\n    });\r\n\r\n\r\n\r\n  \r\n\r\n   \r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n}\r\nhandleDismiss = () => {\r\n  this.setState({ visible: false })\r\n }\r\n\r\n  renderCampaigns () {\r\n    \r\n     //console.log(\"all Campaigns\", this.props.campaigns);\r\n    let latest = this.props.campaigns.length ;\r\n    \r\n\r\n    const items = this.props.campaigns.map ((address, index) => {\r\n      console.log(\"array length and address\",latest ,address )\r\n    return {\r\n\r\n      header: \" Campaign:  # \" + (index +1),\r\n              color: (index+1 == latest)? \"green\" : \"null\",\r\n              description: (\r\n                <Wrap>\r\n                  <Button onClick = {() => this.Remove(address,index)} floated = 'right' style ={{color: 'red'}}>Remove</Button>\r\n             <Info address= {address}/>\r\n             <br />\r\n             {/* <Link route={`/int/${address}`}><Button> Internal Transactions </Button> */}\r\n      \r\n     {/* </Link> */}\r\n                </Wrap>\r\n              ),\r\n        fluid: true,\r\n        \r\n      };\r\n    }).reverse();\r\n    return <Card.Group items={items} style={{marginLeft: '80px' ,marginRight: '80px'}}/>;\r\n }\r\n  \r\nrender () {\r\n  let externaltransactions;\r\n  let user;\r\n   userData.map((v, i) => {\r\n      if(userData[i].address == this.props.accountInfo.accountInfo){\r\n          user = userData[i].role;\r\n      }\r\n  });\r\n  console.log(\"user is\" , user);\r\n  // if(this.props.accountInfo.accountInfo == \"0x98E0E5810D9e262c4AC19815b57c68B7Bf6050a6\")\r\n  if(user == 'superuser')\r\n  {externaltransactions = <Wrap><Link route={`/transactions/${this.props.accountInfo.accountInfo}`}>\r\n  <a>\r\n      <Button\r\n      \r\n      size = 'big'\r\n        floated = \"left\"\r\n        content=\"Transactions\"\r\n        style = {{ marginLeft: '40px'}}\r\n        \r\n      />\r\n    </a>\r\n  </Link> \r\n \r\n \r\n  <Link route={`/accessebility/${this.props.accountInfo.accountInfo}`}>\r\n  <a>\r\n      <Button\r\n      \r\n      size = 'big'\r\n        floated = \"left\"\r\n        content=\"Manage Accessability\"\r\n        style = {{ marginLeft: '40px'}}\r\n        \r\n      />\r\n    </a>\r\n  </Link>\r\n  </Wrap>}\r\n  else{\r\n    externaltransactions = null;\r\n   \r\n  }\r\n  \r\n   return (\r\n      <Layout>\r\n         <div>\r\n          {externaltransactions}\r\n        \r\n    <Link route={`/campaigns/${this.props.accountInfo.accountInfo}`}>\r\n    <a>\r\n        <Button\r\n        style = {{ marginLeft: '40px'}}\r\n        size = 'big'\r\n          floated = \"left\"\r\n          content=\"Create Campaign\"\r\n          icon=\"add circle\"\r\n         \r\n        />\r\n      </a>\r\n    </Link>\r\n   </div>\r\n   <br />\r\n   <br />\r\n   <br />\r\n\r\n          \r\n         <div style = {{color: 'blue'}}>\r\n              <h3 style = {{ color : 'black', marginLeft: '80px'}}>Open Campaigns</h3>\r\n                  {this.renderCampaigns()}\r\n          </div>\r\n          <Notify visible= {this.state.visible} handle = {this.handleDismiss}/>\r\n        </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OnlyCreate;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AAFA;AACA;;;;;;AAqDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AACA;AADA;AAMA;AACA;AAPA;AAAA;AAQA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAtBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA6BA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAgCA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAOA;AAdA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAYA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAUA;AAEA;AAEA;AACA;AACA;AAKA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAgBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;;;;;;AA7LA;;;;;;;;AAEA;AACA;;AADA;AACA;;AACA;AACA;;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AACA;AACA;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;AA3DA;AACA;AAyMA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}